<?php
// get $cfg and html functions --------------------
require_once(dirname(__FILE__).'/config.php');

// set your own setting :
$server_ip		=$cfg['server_ip'];		// IP address of the OLA Server
$universe		=$cfg['universe'];		// OLA Universe connected to DMX hardware
$dmx_address 	=$cfg['dmx_address'];	// test fixture address


// Create a fixture object #########################################
require_once($cfg['path_lib'].'phpdmx_fixture.php');
$id			='par1';
$template	="generic_par-rgbw-12leds-7ch";
$par1		=new phpDmxFixture($name,$template,$dmx_address);


// Print to screen ###################################################
// attributes
$html_table="<table class='att_table table-striped' cellspacing=0 cellpadding=0>\n";
$html_table.=AttributeToHtml($par1,'address','DMX Address');
$html_table.=AttributeToHtml($par1,'code','Template');
$html_table.=AttributeToHtml($par1,'hw_manufacturer');
$html_table.=AttributeToHtml($par1,'hw_model');
$html_table.=AttributeToHtml($par1,'description');
$html_table.=AttributeToHtml($par1,'url');
$html_table.=AttributeToHtml($par1,'type');
$html_table.="</table>\n";

// image
if($imgs=$par1->GetImages()){$html_image="<img height=32 src='../lib/fixtures/{$imgs['dir']}{$imgs['image']}'>";}

// presets
$html_presets=print_r($par1->ListDmxPresets(),true);

echo HtmlHead('Send Fixture');
echo <<<EOF

<h1>$html_image $id</h1>
$html_table

<h2>Autogenerated Presets (as DMX data)</h2>
<pre class='array'>
$html_presets
</pre>

<h2>Sending Presets to DMX address: $dmx_address</h2>
EOF;


// Now Send one preset to Ola ##############################################################
require_once($cfg['path_lib'].'phpdmx_plugin_ola.php');
$transport=new phpDmxPlugin_ola($server_ip);

echo "- Sending the 'red' preset from the par1 object...<br>\n";
$transport->CommandReplace($universe, $par1->GetDmx('red'));

sleep(1);

echo "- Adding the 'blue_half' preset from the par1 object...<br>\n";
$transport->CommandMerge($universe, $par1->GetDmx('blue_half'));

echo $cfg['html_foot'];
?>